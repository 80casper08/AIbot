import logging
import os
import requests
from bs4 import BeautifulSoup
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

BOT_TOKEN = os.getenv("BOT_TOKEN")

logging.basicConfig(level=logging.INFO)

def get_synoptyk_weather(city):
    city_url = city.lower().replace(" ", "-")
    url = f"https://sinoptik.ua/–ø–æ–≥–æ–¥–∞-{city_url}"
    headers = {
        "User-Agent": "Mozilla/5.0"
    }
    response = requests.get(url, headers=headers)
    if response.status_code != 200:
        return "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞."

    soup = BeautifulSoup(response.content, "html.parser")
    try:
        temp_now = soup.find("p", class_="today-temp").text.strip()
        description = soup.find("div", class_="description").find("div").text.strip()
        return f"üå§ –ü–æ–≥–æ–¥–∞ –≤ {city.title()}:\n{description}\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_now}"
    except Exception as e:
        logging.error(e)
        return "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–ø–∞—Ä—Å–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É. –ú–æ–∂–ª–∏–≤–æ –∑–º—ñ–Ω–∏–≤—Å—è HTML."

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –∑ –ø–æ–≥–æ–¥–æ—é (Synoptyk.ua).\n–ù–∞–ø–∏—à—ñ—Ç—å /weather <–º—ñ—Å—Ç–æ>"
    )

async def weather(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if len(context.args) == 0:
        await update.message.reply_text("–í–∫–∞–∂—ñ—Ç—å –º—ñ—Å—Ç–æ. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: /weather –ö–∏—ó–≤")
    else:
        city = " ".join(context.args)
        weather_info = get_synoptyk_weather(city)
        await update.message.reply_text(weather_info)

if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("weather", weather))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    app.run_polling()
