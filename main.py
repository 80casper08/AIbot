import os
import random
from flask import Flask, request
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters

TOKEN = os.getenv("TOKEN")  # –∑–±–µ—Ä—ñ–≥–∞–π —Ç–æ–∫–µ–Ω —É –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ Render
APP_URL = os.getenv("APP_URL")  # —Ç–≤—ñ–π URL –∑ Render (https://your-app.onrender.com)

# --- –¢–µ–∫—Å—Ç–∏ ---
INFO_TEXT = (
    "üì¢ –ö–æ–ª–µ–≥–∏, –¥–æ–±—Ä–æ–≥–æ –¥–Ω—è!\n\n"
    "–ó —Å–µ—Ä–ø–Ω—è –¥–ª—è —Ä–æ–∑–º—ñ—Ç–∫–∏ –ø—ñ–¥–ª–æ–≥–∏ –Ω–∞ –ª–æ–∫–∞—Ü—ñ—ó (5S) "
    "–±—É–¥–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ üüß *–ø–æ–º–∞—Ä–∞–Ω—á–µ–≤—É —Å—Ç—Ä—ñ—á–∫—É* –∑–∞–º—ñ—Å—Ç—å –∂–æ–≤—Ç–æ—ó.\n\n"
    "‚ñ™ –î–ª—è —Ä–æ–±–æ—á–∏—Ö –º—ñ—Å—Ü—å —Ç–∏–º—á–∞—Å–æ–≤–æ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –≤—É–∑—å–∫—É –∂–æ–≤—Ç—É —Å—Ç—Ä—ñ—á–∫—É, "
    "–¥–æ–∫–∏ –Ω–µ –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∑–∞–ø–∞—Å.\n"
    "‚ñ™ –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó —É Confluence –≤–∂–µ –æ–Ω–æ–≤–ª–µ–Ω–æ.\n"
    "‚ñ™ –ù–∞ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤—ñ –ø–æ—Å—Ç—É–ø–æ–≤–æ —Ç–∞–∫–æ–∂ –∑–¥—ñ–π—Å–Ω—é–≤–∞—Ç–∏–º–µ—Ç—å—Å—è –∑–∞–º—ñ–Ω–∞.\n\n"
    "üî∏ –ü—Ä–æ—Å–∏–º–æ –¥–æ–≤–µ—Å—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–æ –ø—ñ–¥–ª–µ–≥–ª–∏—Ö."
)

QUIZ_QUESTIONS = [
    {
        "question": "–Ø–∫–æ–≥–æ –∫–æ–ª—å–æ—Ä—É —Ç–µ–ø–µ—Ä –±—É–¥–µ —Å—Ç—Ä—ñ—á–∫–∞ –¥–ª—è —Ä–æ–∑–º—ñ—Ç–∫–∏ –ø—ñ–¥–ª–æ–≥–∏?",
        "options": ["üü® –ñ–æ–≤—Ç–∞", "üüß –ü–æ–º–∞—Ä–∞–Ω—á–µ–≤–∞", "üü© –ó–µ–ª–µ–Ω–∞"],
        "answer": "üüß –ü–æ–º–∞—Ä–∞–Ω—á–µ–≤–∞"
    },
    {
        "question": "–î–µ —Ç–∏–º—á–∞—Å–æ–≤–æ –∑–∞–ª–∏—à–∏—Ç—å—Å—è –∂–æ–≤—Ç–∞ —Å—Ç—Ä—ñ—á–∫–∞?",
        "options": ["–ù–∞ —Å–∫–ª–∞–¥—ñ", "–ù–∞ —Ä–æ–±–æ—á–∏—Ö –º—ñ—Å—Ü—è—Ö", "–£ –∫–æ—Ä–∏–¥–æ—Ä–∞—Ö"],
        "answer": "–ù–∞ —Ä–æ–±–æ—á–∏—Ö –º—ñ—Å—Ü—è—Ö"
    }
]

INTERVIEW_QUESTIONS = [
    {
        "question": "–©–æ —Ç–∞–∫–µ 5S?",
        "options": ["–ú–µ—Ç–æ–¥ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó —Ä–æ–±–æ—á–æ–≥–æ –º—ñ—Å—Ü—è", "–°–∏—Å—Ç–µ–º–∞ –æ–ø–ª–∞—Ç–∏ –ø—Ä–∞—Ü—ñ", "–í–∏–¥ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è"],
        "answer": "–ú–µ—Ç–æ–¥ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó —Ä–æ–±–æ—á–æ–≥–æ –º—ñ—Å—Ü—è"
    },
    {
        "question": "–©–æ —Ä–æ–±–∏—Ç–∏, —è–∫—â–æ –ø–ª–∞–Ω –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞ –Ω–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è?",
        "options": ["–Ü–≥–Ω–æ—Ä—É–≤–∞—Ç–∏", "–ó—ñ–±—Ä–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É —Ç–∞ —à—É–∫–∞—Ç–∏ —Ä—ñ—à–µ–Ω–Ω—è", "–ü–æ–∫–∞—Ä–∞—Ç–∏ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤"],
        "answer": "–ó—ñ–±—Ä–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É —Ç–∞ —à—É–∫–∞—Ç–∏ —Ä—ñ—à–µ–Ω–Ω—è"
    },
    {
        "question": "–Ø–∫—ñ –≤–∞—à—ñ –¥—ñ—ó —É –≤–∏–ø–∞–¥–∫—É —Ç—Ä–∞–≤–º–∞—Ç–∏–∑–º—É –Ω–∞ –¥—ñ–ª—å–Ω–∏—Ü—ñ?",
        "options": ["–ù–∞–¥–∞—Ç–∏ –ø–µ—Ä—à—É –¥–æ–ø–æ–º–æ–≥—É —ñ –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏ HSE", "–°—Ö–æ–≤–∞—Ç–∏ –≤–∏–ø–∞–¥–æ–∫", "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ª—é–¥–∏–Ω—É –¥–æ–¥–æ–º—É"],
        "answer": "–ù–∞–¥–∞—Ç–∏ –ø–µ—Ä—à—É –¥–æ–ø–æ–º–æ–≥—É —ñ –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏ HSE"
    },
    {
        "question": "–Ø–∫ –≤–∏ –º–æ—Ç–∏–≤—É—î—Ç–µ –ø—ñ–¥–ª–µ–≥–ª–∏—Ö?",
        "options": ["–ü–æ–≥—Ä–æ–∑–∞–º–∏", "–ß–µ—Å–Ω–∏–º —Å—Ç–∞–≤–ª–µ–Ω–Ω—è–º —ñ –ø—Ä–∏–∫–ª–∞–¥–æ–º", "–Ü–≥–Ω–æ—Ä—É–≤–∞–Ω–Ω—è–º –ø—Ä–æ–±–ª–µ–º"],
        "answer": "–ß–µ—Å–Ω–∏–º —Å—Ç–∞–≤–ª–µ–Ω–Ω—è–º —ñ –ø—Ä–∏–∫–ª–∞–¥–æ–º"
    }
]

user_state = {}
app = Flask(__name__)

telegram_app = Application.builder().token(TOKEN).build()

# --- –•–µ–Ω–¥–ª–µ—Ä–∏ ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç üëã –Ø –±–æ—Ç –¥–ª—è –Ω–∞–≤—á–∞–Ω–Ω—è –∑ 5S —Ç–∞ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–æ —Å–ø—ñ–≤–±–µ—Å—ñ–¥–∏!\n\n"
        "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π:\n"
        "üëâ /info ‚Äî –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –ø—Ä–æ –∑–º—ñ–Ω—É —Ä–æ–∑–º—ñ—Ç–∫–∏\n"
        "üëâ /quiz ‚Äî –ø—Ä–æ–π—Ç–∏ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ—Å—Ç\n"
        "üëâ /interview ‚Äî —Ç—Ä–µ–Ω—É–≤–∞–ª—å–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è –≤—ñ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞"
    )

async def info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(INFO_TEXT, parse_mode="Markdown")

async def quiz(update: Update, context: ContextTypes.DEFAULT_TYPE):
    question = random.choice(QUIZ_QUESTIONS)
    user_state[update.effective_chat.id] = question
    keyboard = [[opt] for opt in question["options"]]
    markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text(question["question"], reply_markup=markup)

async def interview(update: Update, context: ContextTypes.DEFAULT_TYPE):
    question = random.choice(INTERVIEW_QUESTIONS)
    user_state[update.effective_chat.id] = question
    keyboard = [[opt] for opt in question["options"]]
    markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text(question["question"], reply_markup=markup)

async def handle_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    if chat_id not in user_state:
        return
    question = user_state[chat_id]
    answer = update.message.text

    if answer == question["answer"]:
        await update.message.reply_text("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!", reply_markup=ReplyKeyboardRemove())
    else:
        await update.message.reply_text(
            f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {question['answer']}",
            reply_markup=ReplyKeyboardRemove()
        )
    del user_state[chat_id]

telegram_app.add_handler(CommandHandler("start", start))
telegram_app.add_handler(CommandHandler("info", info))
telegram_app.add_handler(CommandHandler("quiz", quiz))
telegram_app.add_handler(CommandHandler("interview", interview))
telegram_app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_answer))

# --- Flask –º–∞—Ä—à—Ä—É—Ç–∏ ---
@app.route("/")
def home():
    return "Bot is running!"

@app.route(f"/webhook/{TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), telegram_app.bot)
    telegram_app.update_queue.put_nowait(update)
    return "ok"

if __name__ == "__main__":
    # –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ webhook –¥–ª—è Telegram
    telegram_app.bot.set_webhook(f"{APP_URL}/webhook/{TOKEN}")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
