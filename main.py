import os
import asyncio
from flask import Flask, request
from aiogram import Bot, Dispatcher, types
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from questions import questions

TOKEN = os.getenv("TOKEN")
WEBHOOK_PATH = f"/webhook/{TOKEN}"
WEBHOOK_URL = f"https://aibot-mgod.onrender.com{WEBHOOK_PATH}"  # —Ç–≤—ñ–π URL Render

bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

app = Flask(__name__)

# --- –°—Ç–∞—Ä—Ç–æ–≤–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ ---
def main_keyboard():
    return types.ReplyKeyboardMarkup(
        keyboard=[[types.KeyboardButton(text="üöÄ –ü–æ—á–∞—Ç–∏")]],
        resize_keyboard=True
    )

# --- –ö–æ–º–∞–Ω–¥–∏ ---
@dp.message(commands=["start"])
async def cmd_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É, —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç:", reply_markup=main_keyboard())

# --- –ü—Ä–∏–∫–ª–∞–¥ –æ–±—Ä–æ–±–∫–∏ –∫–Ω–æ–ø–∫–∏ ---
@dp.message(lambda message: message.text == "üöÄ –ü–æ—á–∞—Ç–∏")
async def start_quiz(message: types.Message):
    await message.answer("–¢—É—Ç –ø–æ—á–Ω–µ—Ç—å—Å—è —Ç–µ—Å—Ç...")  # –≤—Å—Ç–∞–≤ —Å—é–¥–∏ —Å–≤–æ—é –ª–æ–≥—ñ–∫—É

# --- Flask webhook ---
@app.route(WEBHOOK_PATH, methods=["POST"])
async def webhook():
    update = types.Update(**await request.get_json())
    await dp.process_update(update)
    return "OK"

# --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è webhook –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ ---
async def on_startup():
    await bot.delete_webhook()
    await bot.set_webhook(WEBHOOK_URL)

if __name__ == "__main__":
    import nest_asyncio
    nest_asyncio.apply()
    asyncio.run(on_startup())
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 8080)))
